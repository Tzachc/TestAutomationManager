<?xml version="1.0" encoding="utf-8"?>
<UserControl x:Class="TestAutomationManager.Views.ExtTableDetailView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             mc:Ignorable="d"
             d:DesignHeight="600" d:DesignWidth="1100"
             Background="{DynamicResource PrimaryBackgroundBrush}">

    <!-- Local styles just for this view -->
    <UserControl.Resources>

        <!-- Card container with rounded corners -->
        <Style x:Key="CardBorder" TargetType="Border">
            <Setter Property="Background" Value="{DynamicResource CardBackgroundBrush}"/>
            <Setter Property="CornerRadius" Value="14"/>
            <Setter Property="Padding" Value="16"/>
            <Setter Property="BorderBrush" Value="{DynamicResource SecondaryBackgroundBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
        </Style>

        <!-- ⭐ ENHANCED: DataGrid with row and column resizing (no row headers) -->
        <Style x:Key="CleanDataGrid" TargetType="DataGrid">
            <Setter Property="Background" Value="{DynamicResource SecondaryBackgroundBrush}"/>
            <Setter Property="Foreground" Value="{DynamicResource TextPrimaryBrush}"/>
            <Setter Property="FontSize" Value="13"/>
            <Setter Property="FontFamily" Value="Segoe UI, Calibri, Arial"/>
            <Setter Property="MinRowHeight" Value="38"/>
            <Setter Property="RowHeaderWidth" Value="0"/>
            <!-- ⭐ No row headers - using ID column instead -->
            <Setter Property="HeadersVisibility" Value="Column"/>
            <Setter Property="AutoGenerateColumns" Value="True"/>
            <Setter Property="CanUserAddRows" Value="False"/>
            <Setter Property="CanUserDeleteRows" Value="False"/>
            <Setter Property="CanUserReorderColumns" Value="True"/>
            <Setter Property="CanUserSortColumns" Value="True"/>
            <Setter Property="CanUserResizeColumns" Value="True"/>
            <Setter Property="CanUserResizeRows" Value="True"/>
            <Setter Property="IsReadOnly" Value="False"/>
            <Setter Property="GridLinesVisibility" Value="All"/>
            <Setter Property="VerticalGridLinesBrush" Value="{DynamicResource DataGridVerticalGridBrush}"/>
            <Setter Property="HorizontalGridLinesBrush" Value="{DynamicResource DataGridHorizontalGridBrush}"/>
            <Setter Property="AlternationCount" Value="2"/>
            <Setter Property="AlternatingRowBackground" Value="{DynamicResource DataGridAlternatingRowBrush}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource SecondaryBackgroundBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="EnableRowVirtualization" Value="True"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        </Style>

        <!-- Column header: bigger, bolder, clearer with proper spacing -->
        <Style TargetType="DataGridColumnHeader">
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Foreground" Value="{DynamicResource TextPrimaryBrush}"/>
            <Setter Property="Background" Value="{DynamicResource DataGridHeaderBackgroundBrush}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource DataGridHeaderBorderBrush}"/>
            <Setter Property="BorderThickness" Value="0,0,1,2"/>
            <Setter Property="Padding" Value="12,10,32,10"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Height" Value="44"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="DataGridColumnHeader">
                        <Grid Background="{TemplateBinding Background}">
                            <!-- Main Content Area -->
                            <ContentPresenter 
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Margin="{TemplateBinding Padding}"
                                SnapsToDevicePixels="True"/>

                            <!-- Edit Icon in overlay -->
                            <Button x:Name="EditColumnButton"
                                    Width="25" Height="30"
                                    Background="Transparent"
                                    BorderThickness="0"
                                    Cursor="Hand"
                                    Click="EditColumnName_Click"
                                    Tag="{TemplateBinding Content}"
                                    ToolTip="Click to rename column"
                                    Visibility="Collapsed"
                                    HorizontalAlignment="Right"
                                    VerticalAlignment="Center"
                                    Margin="0,0,6,0">
                                <TextBlock Text="✏️" FontSize="11" Opacity="0.8"/>
                            </Button>

                            <!-- Column resize grip -->
                            <Thumb x:Name="PART_RightHeaderGripper"
                                   Width="3"
                                   Cursor="SizeWE"
                                   HorizontalAlignment="Right"
                                   Background="Transparent"
                                   Margin="0,0,-2,0"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{DynamicResource DataGridHeaderHoverBrush}"/>
                                <Setter TargetName="EditColumnButton" Property="Visibility" Value="Visible"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Rows with better hover effect -->
        <Style TargetType="DataGridRow">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{DynamicResource TextPrimaryBrush}"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="MinHeight" Value="38"/>
            <Setter Property="Height" Value="Auto"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{DynamicResource DataGridRowHoverBrush}"/>
                </Trigger>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="{DynamicResource DataGridRowSelectedBrush}"/>
                    <Setter Property="Foreground" Value="{DynamicResource DataGridRowSelectedForegroundBrush}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- ⭐ ENHANCED: Cells with better padding for resizable rows -->
        <Style TargetType="DataGridCell">
            <Setter Property="Padding" Value="12,8,12,8"/>
            <Setter Property="Foreground" Value="{DynamicResource TextPrimaryBrush}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="{DynamicResource DataGridCellBorderBrush}"/>
            <Setter Property="BorderThickness" Value="0,0,1,1"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="DataGridCell">
                        <Border x:Name="CellBorder"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Padding="{TemplateBinding Padding}"
                                SnapsToDevicePixels="True">
                            <ContentPresenter 
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                SnapsToDevicePixels="True"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="CellBorder" Property="Background" Value="{DynamicResource DataGridRowSelectedBrush}"/>
                                <Setter Property="Foreground" Value="{DynamicResource DataGridRowSelectedForegroundBrush}"/>
                            </Trigger>
                            <Trigger Property="IsEditing" Value="True">
                                <Setter TargetName="CellBorder" Property="Background" Value="{DynamicResource PrimaryBackgroundBrush}"/>
                                <Setter TargetName="CellBorder" Property="BorderBrush" Value="{DynamicResource PrimaryBlueBrush}"/>
                                <Setter TargetName="CellBorder" Property="BorderThickness" Value="2"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- 🎨 Modern scrollbar styling borrowed from TestsView for consistency -->
        <Style x:Key="ModernScrollBar" TargetType="{x:Type ScrollBar}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollBar}">
                        <Grid>
                            <Border Background="{DynamicResource SecondaryBackgroundBrush}"
                                    CornerRadius="4"
                                    Margin="4">
                                <Track x:Name="PART_Track"
                                       Orientation="{TemplateBinding Orientation}"
                                       Minimum="{TemplateBinding Minimum}"
                                       Maximum="{TemplateBinding Maximum}"
                                       Value="{TemplateBinding Value}"
                                       ViewportSize="{TemplateBinding ViewportSize}">
                                    <Track.Thumb>
                                        <Thumb>
                                            <Thumb.Style>
                                                <Style TargetType="{x:Type Thumb}">
                                                    <Setter Property="MinWidth" Value="14"/>
                                                    <Setter Property="MinHeight" Value="14"/>
                                                    <Setter Property="Background" Value="{DynamicResource BorderBrush}"/>
                                                    <Setter Property="BorderBrush" Value="Transparent"/>
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="{x:Type Thumb}">
                                                                <Border Background="{TemplateBinding Background}"
                                                                        BorderBrush="{TemplateBinding BorderBrush}"
                                                                        BorderThickness="0"
                                                                        CornerRadius="4"/>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                    <Style.Triggers>
                                                        <Trigger Property="IsMouseOver" Value="True">
                                                            <Setter Property="Background" Value="{DynamicResource TextSecondaryBrush}"/>
                                                        </Trigger>
                                                        <Trigger Property="IsDragging" Value="True">
                                                            <Setter Property="Background" Value="{DynamicResource TextPrimaryBrush}"/>
                                                        </Trigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Thumb.Style>
                                        </Thumb>
                                    </Track.Thumb>
                                </Track>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Orientation" Value="Vertical">
                                <Setter TargetName="PART_Track" Property="IsDirectionReversed" Value="True"/>
                                <Setter Property="Width" Value="14"/>
                            </Trigger>
                            <Trigger Property="Orientation" Value="Horizontal">
                                <Setter TargetName="PART_Track" Property="IsDirectionReversed" Value="False"/>
                                <Setter Property="Height" Value="14"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ModernScrollViewerVerticalOnly" TargetType="{x:Type ScrollViewer}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>

                            <ScrollContentPresenter Grid.Column="0"/>

                            <ScrollBar x:Name="PART_VerticalScrollBar"
                                       Style="{StaticResource ModernScrollBar}"
                                       Orientation="Vertical"
                                       Grid.Column="1"
                                       Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                       Value="{TemplateBinding VerticalOffset}"
                                       Minimum="0"
                                       Maximum="{TemplateBinding ScrollableHeight}"
                                       ViewportSize="{TemplateBinding ViewportHeight}"
                                       Margin="4,0,0,0"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ModernScrollViewer" TargetType="{x:Type ScrollViewer}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <ScrollContentPresenter Grid.Column="0" Grid.Row="0"/>

                            <ScrollBar x:Name="PART_HorizontalScrollBar"
                                       Style="{StaticResource ModernScrollBar}"
                                       Orientation="Horizontal"
                                       Grid.Row="1"
                                       Grid.Column="0"
                                       Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                       Value="{TemplateBinding HorizontalOffset}"
                                       Minimum="0"
                                       Maximum="{TemplateBinding ScrollableWidth}"
                                       ViewportSize="{TemplateBinding ViewportWidth}"
                                       Margin="0,4,0,0"/>

                            <ScrollBar x:Name="PART_VerticalScrollBar"
                                       Style="{StaticResource ModernScrollBar}"
                                       Orientation="Vertical"
                                       Grid.Row="0"
                                       Grid.Column="1"
                                       Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                       Value="{TemplateBinding VerticalOffset}"
                                       Minimum="0"
                                       Maximum="{TemplateBinding ScrollableHeight}"
                                       ViewportSize="{TemplateBinding ViewportHeight}"
                                       Margin="4,0,0,0"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </UserControl.Resources>

    <Grid Margin="20">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <!-- HEADER SECTION -->
        <Border Grid.Row="0" Style="{StaticResource CardBorder}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <StackPanel Orientation="Vertical" Margin="0,0,12,0">
                    <StackPanel Orientation="Horizontal" Margin="0,0,0,6">
                        <TextBlock x:Name="TableNameText"
                                   FontSize="20"
                                   FontWeight="Bold"
                                   Foreground="{DynamicResource TextPrimaryBrush}"/>
                        <TextBlock Text="•"
                                   Foreground="{DynamicResource TextSecondaryBrush}"
                                   Margin="8,0,0,0"/>
                        <TextBlock Text="Rows:"
                                   Foreground="{DynamicResource TextSecondaryBrush}"
                                   Margin="8,0,4,0"/>
                        <TextBlock x:Name="RowCountText"
                                   Foreground="{DynamicResource TextPrimaryBrush}"/>
                        <!-- Editable indicator -->
                        <Border Background="{DynamicResource SuccessBrush}"
                                CornerRadius="4"
                                Padding="6,2"
                                Margin="12,0,0,0">
                            <TextBlock Text="✏️ EDITABLE"
                                       FontSize="9"
                                       FontWeight="Bold"
                                       Foreground="White"/>
                        </Border>
                        <!-- ⭐ NEW: Unsaved changes indicator -->
                        <Border x:Name="UnsavedChangesIndicator"
                                Background="{DynamicResource WarningBrush}"
                                CornerRadius="4"
                                Padding="6,2"
                                Margin="6,0,0,0"
                                Visibility="Collapsed">
                            <TextBlock Text="● UNSAVED"
                                       FontSize="9"
                                       FontWeight="Bold"
                                       Foreground="White"/>
                        </Border>
                    </StackPanel>

                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="Test:"
                                   Foreground="{DynamicResource TextSecondaryBrush}"/>
                        <TextBlock x:Name="TestNameText"
                                   Foreground="{DynamicResource TextPrimaryBrush}"
                                   Margin="6,0,0,0"/>
                        <TextBlock Text="("
                                   Foreground="{DynamicResource TextSecondaryBrush}"
                                   Margin="8,0,0,0"/>
                        <TextBlock Text="ID"
                                   Foreground="{DynamicResource TextSecondaryBrush}"/>
                        <TextBlock x:Name="TestIdText"
                                   Foreground="{DynamicResource TextPrimaryBrush}"
                                   Margin="4,0,0,0"/>
                        <TextBlock Text=")"
                                   Foreground="{DynamicResource TextSecondaryBrush}"/>
                        <TextBlock Text="•"
                                   Foreground="{DynamicResource TextSecondaryBrush}"
                                   Margin="8,0,8,0"/>
                        <TextBlock Text="Category:"
                                   Foreground="{DynamicResource TextSecondaryBrush}"/>
                        <TextBlock x:Name="CategoryText"
                                   Foreground="{DynamicResource TextPrimaryBrush}"
                                   Margin="6,0,0,0"/>
                        <!-- Instructions -->
                        <TextBlock Text="💡 Tip: Double-click to edit • Drag column borders to resize • Drag ID cell bottom border to resize rows"
                                   Foreground="{DynamicResource TextTertiaryBrush}"
                                   FontSize="10"
                                   FontStyle="Italic"
                                   Margin="20,0,0,0"
                                   VerticalAlignment="Center"/>
                    </StackPanel>
                </StackPanel>

                <StackPanel Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Right">
                    <!-- ⭐ NEW: Save Layout button (only visible when changes made) -->
                    <Button x:Name="SaveLayoutButton"
                            Content="💾 Save Layout"
                            Padding="14,6"
                            Margin="0,0,8,0"
                            Click="SaveLayoutButton_Click"
                            Visibility="Collapsed"
                            ToolTip="Save column widths and row heights for all users"
                            Background="{DynamicResource WarningBrush}"
                            Foreground="White"
                            FontWeight="SemiBold"/>
                    <!-- Reset sizes button -->
                    <Button x:Name="ResetSizesButton"
                            Content="Reset Sizes"
                            Padding="14,6"
                            Margin="0,0,8,0"
                            Click="ResetSizesButton_Click"
                            ToolTip="Reset all column widths and row heights to default"/>
                    <Button x:Name="RefreshButton"
                            Content="Refresh"
                            Padding="14,6"
                            Click="RefreshButton_Click"/>
                </StackPanel>
            </Grid>
        </Border>

        <!-- GRID WRAPPER -->
        <Border Grid.Row="1" Style="{StaticResource CardBorder}" Margin="0,12,0,0">
            <Grid>
                <!-- Loading / Empty / Error states -->
                <Grid x:Name="LoadingPanel" Visibility="Collapsed" HorizontalAlignment="Center" VerticalAlignment="Center">
                    <TextBlock Text="Loading…" FontSize="16" Foreground="{DynamicResource TextSecondaryBrush}"/>
                </Grid>

                <Grid x:Name="EmptyState" Visibility="Collapsed" HorizontalAlignment="Center" VerticalAlignment="Center">
                    <TextBlock Text="No data in this table" FontSize="16" Foreground="{DynamicResource TextSecondaryBrush}"/>
                </Grid>

                <Grid x:Name="ErrorState" Visibility="Collapsed" HorizontalAlignment="Center" VerticalAlignment="Center">
                    <TextBlock x:Name="ErrorMessageText" FontSize="16" Foreground="{DynamicResource ErrorBrush}" TextWrapping="Wrap" TextAlignment="Center" Width="520"/>
                </Grid>

                <!-- ⭐ ENHANCED: THE DATAGRID - with row resizing in ID column -->
                <DataGrid x:Name="TableDataGrid"
                          Style="{StaticResource CleanDataGrid}"
                          Visibility="Collapsed"
                          ScrollViewer.Style="{StaticResource ModernScrollViewer}"
                          ScrollViewer.PanningMode="Both"
                          ColumnWidth="SizeToCells"
                          CellEditEnding="TableDataGrid_CellEditEnding"
                          BeginningEdit="TableDataGrid_BeginningEdit">
                    <!--LoadingRow="TableDataGrid_LoadingRow"> -->
                    <DataGrid.Resources>
                        <!-- Centered TextBlock for cell content with wrapping -->
                        <Style TargetType="TextBlock">
                            <Setter Property="Foreground" Value="{DynamicResource TextPrimaryBrush}"/>
                            <Setter Property="TextWrapping" Value="Wrap"/>
                            <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
                            <Setter Property="TextAlignment" Value="Center"/>
                            <Setter Property="HorizontalAlignment" Value="Center"/>
                            <Setter Property="VerticalAlignment" Value="Center"/>
                            <Setter Property="Padding" Value="4,2"/>
                            <Setter Property="LineHeight" Value="18"/>
                        </Style>

                        <!-- Editing controls -->
                        <Style TargetType="TextBox">
                            <Setter Property="Foreground" Value="{DynamicResource TextPrimaryBrush}"/>
                            <Setter Property="Background" Value="{DynamicResource PrimaryBackgroundBrush}"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource PrimaryBlueBrush}"/>
                            <Setter Property="BorderThickness" Value="2"/>
                            <Setter Property="TextWrapping" Value="Wrap"/>
                            <Setter Property="TextAlignment" Value="Center"/>
                            <Setter Property="HorizontalContentAlignment" Value="Center"/>
                            <Setter Property="VerticalContentAlignment" Value="Center"/>
                            <Setter Property="Padding" Value="4"/>
                            <Setter Property="AcceptsReturn" Value="True"/>
                        </Style>
                    </DataGrid.Resources>
                </DataGrid>

            </Grid>
        </Border>

        <!-- STATUS LINE -->
        <TextBlock Grid.Row="2"
                   x:Name="StatusText"
                   Foreground="{DynamicResource TextSecondaryBrush}"
                   FontSize="12"
                   Opacity="0.9"
                   Margin="2,10,2,0"/>
    </Grid>
</UserControl>
