<Application x:Class="TestAutomationManager.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Themes/Dark.Blue.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <!-- 🎨 PROFESSIONAL COLOR PALETTE -->
            <SolidColorBrush x:Key="PrimaryBackgroundBrush" Color="#0D1117"/>
            <SolidColorBrush x:Key="SecondaryBackgroundBrush" Color="#161B22"/>
            <SolidColorBrush x:Key="CardBackgroundBrush" Color="#1C2128"/>
            <SolidColorBrush x:Key="HoverBackgroundBrush" Color="#21262D"/>

            <!-- Accent Colors -->
            <SolidColorBrush x:Key="PrimaryBlueBrush" Color="#539BF5"/>
            <SolidColorBrush x:Key="PrimaryBlueHoverBrush" Color="#6CB6FF"/>
            <SolidColorBrush x:Key="PrimaryRedBrush" Color="#F85149"/>

            <!-- Status Colors -->
            <SolidColorBrush x:Key="SuccessBrush" Color="#3FB950"/>
            <SolidColorBrush x:Key="WarningBrush" Color="#D29922"/>
            <SolidColorBrush x:Key="ErrorBrush" Color="#F85149"/>

            <!-- Text Colors -->
            <SolidColorBrush x:Key="TextPrimaryBrush" Color="#E6EDF3"/>
            <SolidColorBrush x:Key="TextSecondaryBrush" Color="#7D8590"/>
            <SolidColorBrush x:Key="TextTertiaryBrush" Color="#484F58"/>

            <!-- Border Colors -->
            <SolidColorBrush x:Key="BorderBrush" Color="#30363D"/>
            <SolidColorBrush x:Key="BorderHoverBrush" Color="#484F58"/>

            <!-- 📦 MODERN CARD STYLE -->
            <Style x:Key="ModernCard" TargetType="Border">
                <Setter Property="Background" Value="{StaticResource CardBackgroundBrush}"/>
                <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="CornerRadius" Value="8"/>
            </Style>

            <!-- 🔘 SLEEK NAVIGATION BUTTON -->
            <Style x:Key="NavigationRadioButton" TargetType="RadioButton">
                <Setter Property="Foreground" Value="{StaticResource TextSecondaryBrush}"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="Margin" Value="0,1"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="RadioButton">
                            <Border x:Name="MainBorder" 
                                    Background="{TemplateBinding Background}"
                                    BorderThickness="0"
                                    CornerRadius="6"
                                    Padding="10,10">
                                <Grid>
                                    <Border x:Name="SelectedIndicator" 
                                            Background="{StaticResource PrimaryBlueBrush}"
                                            CornerRadius="6"
                                            Opacity="0"/>

                                    <ContentPresenter HorizontalAlignment="Left" 
                                                    VerticalAlignment="Center"
                                                    Margin="4,0"/>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter TargetName="MainBorder" Property="Background" Value="#1C2128"/>
                                    <Setter TargetName="SelectedIndicator" Property="Opacity" Value="0.15"/>
                                    <Setter Property="Foreground" Value="{StaticResource TextPrimaryBrush}"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="MainBorder" Property="Background" Value="#21262D"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- 🎯 PRIMARY BUTTON -->
            <Style x:Key="PrimaryButton" TargetType="Button">
                <Setter Property="Background" Value="{StaticResource PrimaryBlueBrush}"/>
                <Setter Property="Foreground" Value="#010409"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Padding" Value="16,8"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="FontWeight" Value="SemiBold"/>
                <Setter Property="FontSize" Value="13"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border x:Name="border" 
                                    Background="{TemplateBinding Background}"
                                    CornerRadius="6"
                                    Padding="{TemplateBinding Padding}">
                                <ContentPresenter HorizontalAlignment="Center" 
                                                VerticalAlignment="Center"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="border" Property="Background" Value="{StaticResource PrimaryBlueHoverBrush}"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="border" Property="Background" Value="#4184E4"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- 🎯 SECONDARY BUTTON -->
            <Style x:Key="SecondaryButton" TargetType="Button">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Foreground" Value="{StaticResource TextSecondaryBrush}"/>
                <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Padding" Value="16,8"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="FontWeight" Value="Medium"/>
                <Setter Property="FontSize" Value="13"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border x:Name="border" 
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="6"
                                    Padding="{TemplateBinding Padding}">
                                <ContentPresenter HorizontalAlignment="Center" 
                                                VerticalAlignment="Center"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="border" Property="Background" Value="#21262D"/>
                                    <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource BorderHoverBrush}"/>
                                    <Setter Property="Foreground" Value="{StaticResource TextPrimaryBrush}"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="border" Property="Background" Value="#1C2128"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- 💫 ICON BUTTON -->
            <Style x:Key="IconButton" TargetType="Button">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Foreground" Value="{StaticResource TextSecondaryBrush}"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Width" Value="32"/>
                <Setter Property="Height" Value="32"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border x:Name="border" 
                                    Background="{TemplateBinding Background}"
                                    CornerRadius="6">
                                <ContentPresenter HorizontalAlignment="Center" 
                                                VerticalAlignment="Center"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="border" Property="Background" Value="{StaticResource HoverBackgroundBrush}"/>
                                    <Setter Property="Foreground" Value="{StaticResource TextPrimaryBrush}"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="border" Property="Background" Value="#1C2128"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- 🔍 PROFESSIONAL SEARCH BOX WITH TYPING INDICATOR -->
            <Style x:Key="ModernTextBox" TargetType="TextBox">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Foreground" Value="{StaticResource TextPrimaryBrush}"/>
                <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Padding" Value="32,8,32,8"/>
                <Setter Property="FontSize" Value="13"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="TextBox">
                            <Border x:Name="border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="6">
                                <Grid>
                                    <!-- Search Icon (Left) -->
                                    <TextBlock x:Name="SearchIcon"
                                 Text="🔍" 
                                 FontSize="14"
                                 Foreground="{StaticResource TextTertiaryBrush}"
                                 VerticalAlignment="Center"
                                 HorizontalAlignment="Left"
                                 Margin="10,0,0,0"
                                 IsHitTestVisible="False"/>

                                    <ScrollViewer x:Name="PART_ContentHost" 
                                    Margin="{TemplateBinding Padding}"
                                    VerticalAlignment="Center"/>

                                    <!-- Placeholder Text -->
                                    <TextBlock x:Name="Hint" 
                                 Text="Search tests..." 
                                 Foreground="{StaticResource TextTertiaryBrush}"
                                 Margin="32,8,32,8"
                                 VerticalAlignment="Center"
                                 IsHitTestVisible="False"
                                 Visibility="Collapsed"/>

                                    <!-- Typing Indicator (Right) -->
                                    <Grid x:Name="TypingIndicator"
                              HorizontalAlignment="Right"
                              Margin="0,0,10,0"
                              Visibility="Collapsed">
                                        <StackPanel Orientation="Horizontal">
                                            <!-- Animated Dots -->
                                            <Ellipse x:Name="Dot1" Width="4" Height="4" 
                                        Fill="{StaticResource PrimaryBlueBrush}" 
                                        Margin="2,0">
                                                <Ellipse.RenderTransform>
                                                    <TranslateTransform x:Name="Dot1Transform" Y="0"/>
                                                </Ellipse.RenderTransform>
                                            </Ellipse>
                                            <Ellipse x:Name="Dot2" Width="4" Height="4" 
                                        Fill="{StaticResource PrimaryBlueBrush}" 
                                        Margin="2,0">
                                                <Ellipse.RenderTransform>
                                                    <TranslateTransform x:Name="Dot2Transform" Y="0"/>
                                                </Ellipse.RenderTransform>
                                            </Ellipse>
                                            <Ellipse x:Name="Dot3" Width="4" Height="4" 
                                        Fill="{StaticResource PrimaryBlueBrush}" 
                                        Margin="2,0">
                                                <Ellipse.RenderTransform>
                                                    <TranslateTransform x:Name="Dot3Transform" Y="0"/>
                                                </Ellipse.RenderTransform>
                                            </Ellipse>
                                        </StackPanel>
                                    </Grid>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <!-- Show placeholder when empty -->
                                <Trigger Property="Text" Value="">
                                    <Setter TargetName="Hint" Property="Visibility" Value="Visible"/>
                                </Trigger>
                                <Trigger Property="Text" Value="{x:Null}">
                                    <Setter TargetName="Hint" Property="Visibility" Value="Visible"/>
                                </Trigger>

                                <!-- Show typing indicator when focused and has text -->
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsFocused" Value="True"/>
                                        <Condition Property="Text" Value="" />
                                    </MultiTrigger.Conditions>
                                    <MultiTrigger.EnterActions>
                                        <BeginStoryboard x:Name="HideTyping">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TypingIndicator" 
                                                                  Storyboard.TargetProperty="Visibility">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </MultiTrigger.EnterActions>
                                </MultiTrigger>

                                <!-- Focused state -->
                                <Trigger Property="IsFocused" Value="True">
                                    <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource PrimaryBlueBrush}"/>
                                    <Setter TargetName="border" Property="Background" Value="#0D1117"/>
                                    <Setter TargetName="SearchIcon" Property="Foreground" Value="{StaticResource PrimaryBlueBrush}"/>
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TypingIndicator" 
                                                                  Storyboard.TargetProperty="Visibility">
                                                    <DiscreteObjectKeyFrame KeyTime="0:0:0.5" Value="{x:Static Visibility.Visible}"/>
                                                </ObjectAnimationUsingKeyFrames>

                                                <!-- Animate Dot 1 -->
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Dot1Transform" 
                                                                  Storyboard.TargetProperty="Y"
                                                                  RepeatBehavior="Forever">
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0" Value="0"/>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="-3"/>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.6" Value="0"/>
                                                </DoubleAnimationUsingKeyFrames>

                                                <!-- Animate Dot 2 (delayed) -->
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Dot2Transform" 
                                                                  Storyboard.TargetProperty="Y"
                                                                  RepeatBehavior="Forever">
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0"/>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="-3"/>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.7" Value="0"/>
                                                </DoubleAnimationUsingKeyFrames>

                                                <!-- Animate Dot 3 (more delayed) -->
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Dot3Transform" 
                                                                  Storyboard.TargetProperty="Y"
                                                                  RepeatBehavior="Forever">
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="-3"/>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.8" Value="0"/>
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TypingIndicator" 
                                                                  Storyboard.TargetProperty="Visibility">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>

                                <!-- Mouse over -->
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="border" Property="Background" Value="#0D1117"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- 🎚️ MODERN TOGGLE -->
            <Style x:Key="ModernToggle" TargetType="CheckBox">
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="CheckBox">
                            <StackPanel Orientation="Horizontal">
                                <Border x:Name="SwitchBorder" 
                                       Width="40" 
                                       Height="22" 
                                       Background="{StaticResource BorderBrush}"
                                       BorderThickness="0"
                                       CornerRadius="11"
                                       Margin="0,0,8,0">
                                    <Border x:Name="SwitchThumb" 
                                           Width="16" 
                                           Height="16" 
                                           Background="#E6EDF3"
                                           CornerRadius="8"
                                           HorizontalAlignment="Left"
                                           Margin="3,0,0,0"/>
                                </Border>
                                <ContentPresenter VerticalAlignment="Center"/>
                            </StackPanel>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter TargetName="SwitchBorder" Property="Background" Value="{StaticResource PrimaryBlueBrush}"/>
                                    <Setter TargetName="SwitchThumb" Property="HorizontalAlignment" Value="Right"/>
                                    <Setter TargetName="SwitchThumb" Property="Margin" Value="0,0,3,0"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="SwitchBorder" Property="Opacity" Value="0.8"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- 🏷️ BADGE STYLE -->
            <Style x:Key="Badge" TargetType="Border">
                <Setter Property="CornerRadius" Value="12"/>
                <Setter Property="Padding" Value="8,4"/>
                <Setter Property="Background" Value="#1C2128"/>
                <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
                <Setter Property="BorderThickness" Value="1"/>
            </Style>
        </ResourceDictionary>
    </Application.Resources>
</Application>